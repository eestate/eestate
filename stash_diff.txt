diff --git a/frontend/package-lock.json b/frontend/package-lock.json
index 375c237..0437e1f 100644
--- a/frontend/package-lock.json
+++ b/frontend/package-lock.json
@@ -23,6 +23,7 @@
         "@reduxjs/toolkit": "^2.8.2",
         "@tailwindcss/vite": "^4.1.8",
         "axios": "^1.9.0",
+        "chart.js": "^4.4.9",
         "class-variance-authority": "^0.7.1",
         "clsx": "^2.1.1",
         "js-cookie": "^3.0.5",
@@ -30,6 +31,7 @@
         "lucide-react": "^0.511.0",
         "next-themes": "^0.4.6",
         "react": "^19.1.0",
+        "react-chartjs-2": "^5.3.0",
         "react-dom": "^19.1.0",
         "react-hook-form": "^7.57.0",
         "react-leaflet": "^5.0.0",
@@ -1133,6 +1135,12 @@
         "@jridgewell/sourcemap-codec": "^1.4.14"
       }
     },
+    "node_modules/@kurkle/color": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.4.tgz",
+      "integrity": "sha512-M5UknZPHRu3DEDWoipU6sE8PdkZ6Z/S+v4dD+Ke8IaNlpdSQah50lz1KtcFBa2vsdOnwbbnxJwVM4wty6udA5w==",
+      "license": "MIT"
+    },
     "node_modules/@radix-ui/primitive": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz",
@@ -3003,6 +3011,18 @@
         "url": "https://github.com/chalk/chalk?sponsor=1"
       }
     },
+    "node_modules/chart.js": {
+      "version": "4.4.9",
+      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.4.9.tgz",
+      "integrity": "sha512-EyZ9wWKgpAU0fLJ43YAEIF8sr5F2W3LqbS40ZJyHIner2lY14ufqv2VMp69MAiZ2rpwxEUxEhIH/0U3xyRynxg==",
+      "license": "MIT",
+      "dependencies": {
+        "@kurkle/color": "^0.3.0"
+      },
+      "engines": {
+        "pnpm": ">=8"
+      }
+    },
     "node_modules/chownr": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
@@ -4776,6 +4796,16 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/react-chartjs-2": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/react-chartjs-2/-/react-chartjs-2-5.3.0.tgz",
+      "integrity": "sha512-UfZZFnDsERI3c3CZGxzvNJd02SHjaSJ8kgW1djn65H1KK8rehwTjyrRKOG3VTMG8wtHZ5rgAO5oTHtHi9GCCmw==",
+      "license": "MIT",
+      "peerDependencies": {
+        "chart.js": "^4.1.1",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
+      }
+    },
     "node_modules/react-dom": {
       "version": "19.1.0",
       "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.0.tgz",
diff --git a/frontend/package.json b/frontend/package.json
index 1a9f8bb..25eb07e 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -25,6 +25,7 @@
     "@reduxjs/toolkit": "^2.8.2",
     "@tailwindcss/vite": "^4.1.8",
     "axios": "^1.9.0",
+    "chart.js": "^4.4.9",
     "class-variance-authority": "^0.7.1",
     "clsx": "^2.1.1",
     "js-cookie": "^3.0.5",
@@ -32,6 +33,7 @@
     "lucide-react": "^0.511.0",
     "next-themes": "^0.4.6",
     "react": "^19.1.0",
+    "react-chartjs-2": "^5.3.0",
     "react-dom": "^19.1.0",
     "react-hook-form": "^7.57.0",
     "react-leaflet": "^5.0.0",
diff --git a/frontend/src/layouts/AdminLayout.jsx b/frontend/src/layouts/AdminLayout.jsx
index 677ae15..20cd146 100644
--- a/frontend/src/layouts/AdminLayout.jsx
+++ b/frontend/src/layouts/AdminLayout.jsx
@@ -1,3 +1,64 @@
+// import React, { useState } from 'react';
+// import { Outlet } from 'react-router-dom';
+// import { AdminSidebar } from '@/pages/admin/AdminSidebar';
+// import { 
+//   BarChart3, 
+//   Users, 
+//   Home, 
+//   CreditCard, 
+//   Calendar,
+//   Bell,
+// } from 'lucide-react';
+
+// // Header Component
+// const Header = ({ activeTab }) => {
+//   const getPageTitle = (tab) => {
+//     const titles = {
+//       'dashboard': 'Dashboard',
+//       'user-management': 'User Management',
+//       'property-moderation': 'Property Moderation',
+//       'subscriptions': 'Subscription Management',
+//       'bookings': 'Booking Monitoring'
+//     };
+//     return titles[tab] || 'Dashboard';
+//   };
+
+//   return (
+//     <div className="bg-white border-b px-6 py-4 flex justify-between items-center">
+//       <h1 className="text-xl font-semibold">{getPageTitle(activeTab)}</h1>
+//       <div className="flex items-center space-x-4">
+//         <button className="p-2 text-gray-400 hover:text-gray-600 relative">
+//           <Bell size={20} />
+//           <span className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full"></span>
+//         </button>
+//         <div className="flex items-center space-x-2">
+//           <div className="w-8 h-8 bg-gray-300 rounded-full"></div>
+//           <span className="text-sm font-medium">Admin User</span>
+//         </div>
+//       </div>
+//     </div>
+//   );
+// };
+
+// const AdminLayout = () => {
+//   const [activeTab, setActiveTab] = useState('dashboard');
+
+//   return (
+//     <div className="flex min-h-screen bg-gray-50">
+//       <AdminSidebar activeTab={activeTab} setActiveTab={setActiveTab} />
+//       <div className="flex-1 flex flex-col overflow-hidden">
+//         <Header activeTab={activeTab} />
+//         <div className="flex-1 overflow-auto p-6">
+//           <Outlet />
+//         </div>
+//       </div>
+//     </div>
+//   );
+// };
+
+// export default AdminLayout;
+
+
 import React, { useState } from 'react';
 import { Outlet } from 'react-router-dom';
 import { AdminSidebar } from '@/pages/admin/AdminSidebar';
@@ -24,7 +85,7 @@ const Header = ({ activeTab }) => {
   };
 
   return (
-    <div className="bg-white border-b px-6 py-4 flex justify-between items-center">
+    <div className="fixed top-0 left-64 right-0 bg-white border-b px-6 py-4 flex justify-between items-center z-10">
       <h1 className="text-xl font-semibold">{getPageTitle(activeTab)}</h1>
       <div className="flex items-center space-x-4">
         <button className="p-2 text-gray-400 hover:text-gray-600 relative">
@@ -44,11 +105,13 @@ const AdminLayout = () => {
   const [activeTab, setActiveTab] = useState('dashboard');
 
   return (
-    <div className="flex min-h-screen bg-gray-50">
-      <AdminSidebar activeTab={activeTab} setActiveTab={setActiveTab} />
-      <div className="flex-1 flex flex-col overflow-hidden">
-        <Header activeTab={activeTab} />
-        <div className="flex-1 overflow-auto p-6">
+    <div className="flex h-screen w-screen overflow-hidden">
+      <div className="fixed top-0 left-0 h-full w-64 z-20">
+        <AdminSidebar activeTab={activeTab} setActiveTab={setActiveTab} />
+      </div>
+      <div className="flex-1 flex flex-col ml-64">
+        <div className="h-16"></div> {/* Spacer for fixed header */}
+        <div className="flex-1 overflow-y-auto p-6 bg-gray-50">
           <Outlet />
         </div>
       </div>
diff --git a/frontend/src/pages/admin/AdminBooking.jsx b/frontend/src/pages/admin/AdminBooking.jsx
index 05e2bfd..6b176b6 100644
--- a/frontend/src/pages/admin/AdminBooking.jsx
+++ b/frontend/src/pages/admin/AdminBooking.jsx
@@ -4,11 +4,15 @@ import {
   Eye,
   Filter,
   CheckCircle,
+  Search
 } from 'lucide-react';
 
 // Booking Monitoring Component
 const AdminBooking = () => {
   const [selectedBooking, setSelectedBooking] = useState(null);
+  const [showStatusDropdown, setShowStatusDropdown] = useState(false);
+  const [selectedStatus, setSelectedStatus] = useState('All Status');
+  const [searchQuery, setSearchQuery] = useState('');
 
   const bookings = [
     { 
@@ -57,6 +61,17 @@ const AdminBooking = () => {
     },
   ];
 
+  const statusOptions = ['All Status', 'Confirmed', 'Completed', 'Cancelled'];
+
+  const filteredBookings = bookings
+    .filter(booking => selectedStatus === 'All Status' || booking.status === selectedStatus)
+    .filter(booking => 
+      booking.property.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      booking.location.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      booking.guest.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      booking.agent.toLowerCase().includes(searchQuery.toLowerCase())
+    );
+
   const openDetails = (booking) => {
     setSelectedBooking(booking);
   };
@@ -65,14 +80,53 @@ const AdminBooking = () => {
     setSelectedBooking(null);
   };
 
+  const handleStatusFilterSelect = (status) => {
+    setSelectedStatus(status);
+    setShowStatusDropdown(false);
+  };
+
+  const handleSearchChange = (e) => {
+    setSearchQuery(e.target.value);
+  };
+
   return (
     <div className="p-6">
       <div className="flex justify-between items-center mb-6">
         <h1 className="text-2xl font-semibold">Booking Monitoring</h1>
-        <button className="flex items-center space-x-2 px-4 py-2 border rounded-lg">
-          <Filter size={16} />
-          <span>All Status</span>
-        </button>
+        <div className="flex items-center space-x-4">
+          <div className="relative">
+            <input
+              type="text"
+              placeholder="Search by property, location, guest, or agent..."
+              value={searchQuery}
+              onChange={handleSearchChange}
+              className="pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
+            />
+            <Search size={16} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
+          </div>
+          <div className="relative">
+            <button 
+              className="flex items-center space-x-2 px-4 py-2 border rounded-lg"
+              onClick={() => setShowStatusDropdown(!showStatusDropdown)}
+            >
+              <Filter size={16} />
+              <span>{selectedStatus}</span>
+            </button>
+            {showStatusDropdown && (
+              <div className="absolute right-0 mt-2 w-48 bg-white border rounded-lg shadow-lg z-10">
+                {statusOptions.map((status, index) => (
+                  <button 
+                    key={index}
+                    className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                    onClick={() => handleStatusFilterSelect(status)}
+                  >
+                    {status}
+                  </button>
+                ))}
+              </div>
+            )}
+          </div>
+        </div>
       </div>
       
       {/* Bookings Table */}
@@ -90,7 +144,7 @@ const AdminBooking = () => {
               </tr>
             </thead>
             <tbody>
-              {bookings.map((booking, index) => (
+              {filteredBookings.map((booking, index) => (
                 <tr key={index} className="border-b hover:bg-gray-50">
                   <td className="p-4">
                     <div>
@@ -173,7 +227,7 @@ const AdminBooking = () => {
 
       {/* Details Modal */}
       {selectedBooking && (
-        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
+        <div className="fixed inset-0 bg-white bg-opacity-50 flex items-center justify-center z-50">
           <div className="bg-white rounded-lg w-full max-w-md p-6 relative">
             <button 
               className="absolute bottom-4 right-4 text-gray-500 hover:text-gray-700"
diff --git a/frontend/src/pages/admin/AdminDashboard.jsx b/frontend/src/pages/admin/AdminDashboard.jsx
index bb7d024..c8ed5b1 100644
--- a/frontend/src/pages/admin/AdminDashboard.jsx
+++ b/frontend/src/pages/admin/AdminDashboard.jsx
@@ -5,10 +5,108 @@ import {
   CreditCard, 
   TrendingUp,
 } from 'lucide-react';
+import { Line } from 'react-chartjs-2';
+import {
+  Chart as ChartJS,
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend,
+} from 'chart.js';
 
+// Register Chart.js components
+ChartJS.register(
+  CategoryScale,
+  LinearScale,
+  PointElement,
+  LineElement,
+  Title,
+  Tooltip,
+  Legend
+);
 
 // Analytics Component
 const AdminDashboard = () => {
+  // Chart data
+  const chartData = {
+    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
+    datasets: [
+      {
+        label: 'Views',
+        data: [400, 600, 450, 800, 650, 900, 750, 850, 950, 1000, 1100, 1200],
+        borderColor: 'rgb(59, 130, 246)',
+        backgroundColor: 'rgba(59, 130, 246, 0.2)',
+        tension: 0.4,
+        fill: true,
+      },
+      {
+        label: 'Properties Listed',
+        data: [200, 300, 250, 400, 350, 500, 450, 550, 600, 650, 700, 800],
+        borderColor: 'rgb(34, 197, 94)',
+        backgroundColor: 'rgba(34, 197, 94, 0.2)',
+        tension: 0.4,
+        fill: true,
+      },
+    ],
+  };
+
+  // Chart options
+  const chartOptions = {
+    responsive: true,
+    maintainAspectRatio: false,
+    plugins: {
+      legend: {
+        position: 'top',
+        labels: {
+          font: {
+            size: 12,
+          },
+        },
+      },
+      title: {
+        display: false,
+      },
+      tooltip: {
+        mode: 'index',
+        intersect: false,
+        callbacks: {
+          label: function(context) {
+            return `${context.dataset.label}: ${context.parsed.y}`;
+          },
+        },
+      },
+    },
+    scales: {
+      x: {
+        grid: {
+          display: false,
+        },
+        title: {
+          display: true,
+          text: 'Month',
+        },
+      },
+      y: {
+        grid: {
+          color: 'rgba(0, 0, 0, 0.1)',
+        },
+        title: {
+          display: true,
+          text: 'Count',
+        },
+        beginAtZero: true,
+      },
+    },
+    interaction: {
+      mode: 'nearest',
+      axis: 'x',
+      intersect: false,
+    },
+  };
+
   return (
     <div className="p-6">
       <h1 className="text-2xl font-semibold mb-6">Analytics</h1>
@@ -63,18 +161,8 @@ const AdminDashboard = () => {
       {/* Chart */}
       <div className="bg-white p-6 rounded-lg shadow-sm border mb-8">
         <h3 className="text-lg font-semibold mb-4">Monthly Trends</h3>
-        <div className="h-64 flex items-end justify-between space-x-2">
-          {[40, 60, 45, 80, 65, 90, 75, 85, 95, 100, 110, 120].map((height, index) => (
-            <div key={index} className="flex-1 flex flex-col items-center">
-              <div 
-                className="w-full bg-blue-500 rounded-t"
-                style={{ height: `${height}%` }}
-              ></div>
-              <span className="text-xs text-gray-500 mt-2">
-                {['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][index]}
-              </span>
-            </div>
-          ))}
+        <div className="h-64">
+          <Line data={chartData} options={chartOptions} />
         </div>
       </div>
       
@@ -104,4 +192,4 @@ const AdminDashboard = () => {
   );
 };
 
-export default AdminDashboard
+export default AdminDashboard;
\ No newline at end of file
diff --git a/frontend/src/pages/admin/AdminProperty.jsx b/frontend/src/pages/admin/AdminProperty.jsx
index 2464329..5844c74 100644
--- a/frontend/src/pages/admin/AdminProperty.jsx
+++ b/frontend/src/pages/admin/AdminProperty.jsx
@@ -6,6 +6,9 @@ import {
 
 const AdminProperty = () => {
   const [selectedProperty, setSelectedProperty] = useState(null);
+  const [showStatusDropdown, setShowStatusDropdown] = useState(false);
+  const [selectedStatus, setSelectedStatus] = useState('All Status');
+  const [searchQuery, setSearchQuery] = useState('');
 
   const properties = [
     { 
@@ -23,7 +26,7 @@ const AdminProperty = () => {
       details: "$850,000 • 2 beds • 2 baths",
       location: "Austin, TX", 
       agent: "Sarah Johnson", 
-      status: "Pending", 
+      status: "Sold", 
       submitted: "5 hours ago",
       statusColor: "yellow",
       description: "Sleek downtown apartment with modern amenities, open floor plan, and city views. Perfect for urban professionals."
@@ -50,6 +53,16 @@ const AdminProperty = () => {
     },
   ];
 
+  const statusOptions = ['All Status', 'Available', 'Sold'];
+
+  const filteredProperties = properties
+    .filter(property => selectedStatus === 'All Status' || property.status === selectedStatus)
+    .filter(property => 
+      property.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      property.location.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      property.agent.toLowerCase().includes(searchQuery.toLowerCase())
+    );
+
   const openDetails = (property) => {
     setSelectedProperty(property);
   };
@@ -58,14 +71,53 @@ const AdminProperty = () => {
     setSelectedProperty(null);
   };
 
+  const handleStatusFilterSelect = (status) => {
+    setSelectedStatus(status);
+    setShowStatusDropdown(false);
+  };
+
+  const handleSearchChange = (e) => {
+    setSearchQuery(e.target.value);
+  };
+
   return (
     <div className="p-6 min-h-screen bg-gray-100">
       <div className="flex justify-between items-center mb-6">
         <h1 className="text-2xl font-semibold">Property Moderation</h1>
-        <button className="flex items-center space-x-2 px-4 py-2 border rounded-lg">
-          <Filter size={16} />
-          <span>All Status</span>
-        </button>
+        <div className="flex items-center space-x-4">
+          <div className="relative">
+            <input
+              type="text"
+              placeholder="Search by name, location, or agent..."
+              value={searchQuery}
+              onChange={handleSearchChange}
+              className="pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
+            />
+            <Search size={16} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
+          </div>
+          <div className="relative">
+            <button 
+              className="flex items-center space-x-2 px-4 py-2 border rounded-lg"
+              onClick={() => setShowStatusDropdown(!showStatusDropdown)}
+            >
+              <Filter size={16} />
+              <span>{selectedStatus}</span>
+            </button>
+            {showStatusDropdown && (
+              <div className="absolute right-0 mt-2 w-48 bg-white border rounded-lg shadow-lg z-10">
+                {statusOptions.map((status, index) => (
+                  <button 
+                    key={index}
+                    className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                    onClick={() => handleStatusFilterSelect(status)}
+                  >
+                    {status}
+                  </button>
+                ))}
+              </div>
+            )}
+          </div>
+        </div>
       </div>
       
       <div className="bg-white rounded-lg shadow-sm border">
@@ -82,7 +134,7 @@ const AdminProperty = () => {
               </tr>
             </thead>
             <tbody>
-              {properties.map((property, index) => (
+              {filteredProperties.map((property, index) => (
                 <tr key={index} className="border-b hover:bg-gray-50">
                   <td className="p-4">
                     <div className="flex items-center space-x-3">
@@ -119,7 +171,7 @@ const AdminProperty = () => {
       </div>
 
       {selectedProperty && (
-        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
+        <div className="fixed inset-0 bg-white bg-opacity-50 flex items-center justify-center z-50">
           <div className="bg-white rounded-lg w-full max-w-md p-6 relative">
             <button 
               className="absolute bottom-4 right-4 text-gray-500 hover:text-gray-700"
@@ -150,7 +202,9 @@ const AdminProperty = () => {
               <div className="col-span-2">
                 <p className="text-sm text-gray-500">Status</p>
                 <p className="flex items-center space-x-2">
-                  <CheckCircle size={16} className="text-green-500" />
+                  <CheckCircle size={16} className={`${
+                    selectedProperty.statusColor === 'green' ? 'text-green-500' : 'text-yellow-500'
+                  }`} />
                   <span className="font-medium">{selectedProperty.status}</span>
                 </p>
               </div>
diff --git a/frontend/src/pages/admin/AdminSubctription.jsx b/frontend/src/pages/admin/AdminSubctription.jsx
index d6b42d3..5ae5b47 100644
--- a/frontend/src/pages/admin/AdminSubctription.jsx
+++ b/frontend/src/pages/admin/AdminSubctription.jsx
@@ -1,4 +1,4 @@
-import React from 'react';
+import React, { useState } from 'react';
 import { 
   BarChart3, 
   Users, 
@@ -13,19 +13,106 @@ import {
   Filter,
   Search
 } from 'lucide-react';
+
 // Subscription Management Component
 const AdminSubscription = () => {
+  const [isModalOpen, setIsModalOpen] = useState(false);
+  const [selectedPlan, setSelectedPlan] = useState(null);
+  const [showPlanDropdown, setShowPlanDropdown] = useState(false);
+  const [selectedFilterPlan, setSelectedFilterPlan] = useState('All Plans');
+  const [searchQuery, setSearchQuery] = useState('');
+  const [plans, setPlans] = useState([
+    { id: 1, name: 'Basic', price: '$0', period: 'per month', features: ['10 property listings', 'Basic support'], color: 'gray' },
+    { id: 2, name: 'Professional', price: '$9.99', period: 'per month', features: ['Unlimited listings', 'Priority support', 'Advanced analytics'], color: 'blue' },
+    { id: 3, name: 'Premium', price: '$24.99', period: 'per month', features: ['Everything in Pro', 'White-label solution', 'Custom integrations'], color: 'purple' },
+  ]);
+
+  const [formData, setFormData] = useState({
+    name: '',
+    price: '',
+    period: 'per month',
+    features: [],
+    color: 'gray',
+  });
+
+  const subscribers = [
+    { name: 'Sarah Williams', email: 'sarah@example.com', plan: 'Premium', status: 'Active', nextPayment: 'Feb 15, 2024', amount: '$24.99' },
+    { name: 'Michael Brown', email: 'michael@example.com', plan: 'Professional', status: 'Active', nextPayment: 'Feb 20, 2024', amount: '$9.99' },
+    { name: 'David Wilson', email: 'david@example.com', plan: 'Premium', status: 'Active', nextPayment: 'Feb 18, 2024', amount: '$24.99' },
+    { name: 'Emma Johnson', email: 'emma@example.com', plan: 'Professional', status: 'Cancelled', nextPayment: 'Expired', amount: '$9.99' },
+  ];
+
+  const filteredSubscribers = subscribers
+    .filter(subscriber => selectedFilterPlan === 'All Plans' || subscriber.plan === selectedFilterPlan)
+    .filter(subscriber => 
+      subscriber.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      subscriber.email.toLowerCase().includes(searchQuery.toLowerCase())
+    );
+
+  const handleEditClick = (plan = null) => {
+    if (plan) {
+      setSelectedPlan(plan);
+      setFormData({
+        name: plan.name,
+        price: plan.price,
+        period: plan.period,
+        features: plan.features,
+        color: plan.color,
+      });
+    } else {
+      setSelectedPlan(null);
+      setFormData({
+        name: '',
+        price: '',
+        period: 'per month',
+        features: [],
+        color: 'gray',
+      });
+    }
+    setIsModalOpen(true);
+  };
+
+  const handleFormSubmit = (e) => {
+    e.preventDefault();
+    const newPlan = {
+      id: selectedPlan ? selectedPlan.id : plans.length + 1,
+      ...formData,
+      features: formData.features.length ? formData.features : formData.featuresInput.split('\n').filter(f => f.trim()),
+    };
+
+    if (selectedPlan) {
+      setPlans(plans.map(plan => plan.id === selectedPlan.id ? newPlan : plan));
+    } else {
+      setPlans([...plans, newPlan]);
+    }
+    setIsModalOpen(false);
+  };
+
+  const handleInputChange = (e) => {
+    const { name, value } = e.target;
+    setFormData(prev => ({ ...prev, [name]: value }));
+  };
+
+  const handleFeaturesChange = (e) => {
+    setFormData(prev => ({ ...prev, featuresInput: e.target.value }));
+  };
+
+  const handlePlanFilterSelect = (planName) => {
+    setSelectedFilterPlan(planName);
+    setShowPlanDropdown(false);
+  };
+
+  const handleSearchChange = (e) => {
+    setSearchQuery(e.target.value);
+  };
+
   return (
     <div className="p-6">
       <h1 className="text-2xl font-semibold mb-6">Subscription Management</h1>
       
       {/* Plans */}
       <div className="grid grid-cols-3 gap-6 mb-8">
-        {[
-          { name: 'Basic', price: '$0', period: 'per month', features: ['10 property listings', 'Basic support'], color: 'gray' },
-          { name: 'Professional', price: '$9.99', period: 'per month', features: ['Unlimited listings', 'Priority support', 'Advanced analytics'], color: 'blue' },
-          { name: 'Premium', price: '$24.99', period: 'per month', features: ['Everything in Pro', 'White-label solution', 'Custom integrations'], color: 'purple' },
-        ].map((plan, index) => (
+        {plans.map((plan, index) => (
           <div key={index} className="bg-white p-6 rounded-lg shadow-sm border">
             <div className="text-center mb-4">
               <h3 className="text-lg font-semibold">{plan.name}</h3>
@@ -39,26 +126,157 @@ const AdminSubscription = () => {
                 <li key={idx} className="text-sm text-gray-600">✓ {feature}</li>
               ))}
             </ul>
-            <button className={`w-full py-2 px-4 rounded ${
-              plan.color === 'blue' ? 'bg-blue-500 text-white' : 
-              plan.color === 'purple' ? 'bg-purple-500 text-white' : 
-              'bg-gray-500 text-white'
-            }`}>
+            <button 
+              className={`w-full py-2 px-4 rounded ${
+                plan.color === 'blue' ? 'bg-blue-500 text-white' : 
+                plan.color === 'purple' ? 'bg-purple-500 text-white' : 
+                'bg-gray-500 text-white'
+              }`}
+              onClick={() => handleEditClick(plan)}
+            >
               Edit Plan
             </button>
           </div>
         ))}
+        <button 
+          className="bg-gray-100 p-6 rounded-lg shadow-sm border text-center text-gray-600 hover:bg-gray-200"
+          onClick={() => handleEditClick()}
+        >
+          + Add New Plan
+        </button>
       </div>
       
+      {/* Modal */}
+      {isModalOpen && (
+        <div className="fixed inset-0 bg-white bg-opacity-50 flex items-center justify-center z-50">
+          <div className="bg-white rounded-lg p-6 w-full max-w-md">
+            <h2 className="text-xl font-semibold mb-4">
+              {selectedPlan ? 'Edit Plan' : 'Add New Plan'}
+            </h2>
+            <form onSubmit={handleFormSubmit}>
+              <div className="mb-4">
+                <label className="block text-sm font-medium text-gray-700">Plan Name</label>
+                <input
+                  type="text"
+                  name="name"
+                  value={formData.name}
+                  onChange={handleInputChange}
+                  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200"
+                  required
+                />
+              </div>
+              <div className="mb-4">
+                <label className="block text-sm font-medium text-gray-700">Price</label>
+                <input
+                  type="text"
+                  name="price"
+                  value={formData.price}
+                  onChange={handleInputChange}
+                  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200"
+                  required
+                />
+              </div>
+              <div className="mb-4">
+                <label className="block text-sm font-medium text-gray-700">Period</label>
+                <select
+                  name="period"
+                  value={formData.period}
+                  onChange={handleInputChange}
+                  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200"
+                >
+                  <option value="per month">Per Month</option>
+                  <option value="per year">Per Year</option>
+                </select>
+              </div>
+              <div className="mb-4">
+                <label className="block text-sm font-medium text-gray-700">Features (one per line)</label>
+                <textarea
+                  name="features"
+                  value={formData.featuresInput || formData.features.join('\n')}
+                  onChange={handleFeaturesChange}
+                  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200"
+                  rows="4"
+                  placeholder="Enter one feature per line"
+                />
+              </div>
+              <div className="mb-4">
+                <label className="block text-sm font-medium text-gray-700">Button Color</label>
+                <select
+                  name="color"
+                  value={formData.color}
+                  onChange={handleInputChange}
+                  className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200"
+                >
+                  <option value="gray">Gray</option>
+                  <option value="blue">Blue</option>
+                  <option value="purple">Purple</option>
+                </select>
+              </div>
+              <div className="flex justify-end space-x-2">
+                <button
+                  type="button"
+                  className="px-4 py-2 border rounded-md text-gray-600 hover:bg-gray-100"
+                  onClick={() => setIsModalOpen(false)}
+                >
+                  Cancel
+                </button>
+                <button
+                  type="submit"
+                  className="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600"
+                >
+                  {selectedPlan ? 'Update Plan' : 'Add Plan'}
+                </button>
+              </div>
+            </form>
+          </div>
+        </div>
+      )}
+      
       {/* Subscribers */}
       <div className="bg-white rounded-lg shadow-sm border">
         <div className="p-4 border-b">
           <div className="flex justify-between items-center">
             <h3 className="text-lg font-semibold">Current Subscribers</h3>
-            <button className="flex items-center space-x-2 px-4 py-2 border rounded-lg">
-              <Filter size={16} />
-              <span>All Plans</span>
-            </button>
+            <div className="flex items-center space-x-4">
+              <div className="relative">
+                <input
+                  type="text"
+                  placeholder="Search by name or email..."
+                  value={searchQuery}
+                  onChange={handleSearchChange}
+                  className="pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
+                />
+                <Search size={16} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
+              </div>
+              <div className="relative">
+                <button 
+                  className="flex items-center space-x-2 px-4 py-2 border rounded-lg"
+                  onClick={() => setShowPlanDropdown(!showPlanDropdown)}
+                >
+                  <Filter size={16} />
+                  <span>{selectedFilterPlan}</span>
+                </button>
+                {showPlanDropdown && (
+                  <div className="absolute right-0 mt-2 w-48 bg-white border rounded-lg shadow-lg z-10">
+                    <button 
+                      className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                      onClick={() => handlePlanFilterSelect('All Plans')}
+                    >
+                      All Plans
+                    </button>
+                    {plans.map((plan, index) => (
+                      <button 
+                        key={index}
+                        className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                        onClick={() => handlePlanFilterSelect(plan.name)}
+                      >
+                        {plan.name}
+                      </button>
+                    ))}
+                  </div>
+                )}
+              </div>
+            </div>
           </div>
         </div>
         <div className="overflow-x-auto">
@@ -74,12 +292,7 @@ const AdminSubscription = () => {
               </tr>
             </thead>
             <tbody>
-              {[
-                { name: 'Sarah Williams', email: 'sarah@example.com', plan: 'Premium', status: 'Active', nextPayment: 'Feb 15, 2024', amount: '$24.99' },
-                { name: 'Michael Brown', email: 'michael@example.com', plan: 'Professional', status: 'Active', nextPayment: 'Feb 20, 2024', amount: '$9.99' },
-                { name: 'David Wilson', email: 'david@example.com', plan: 'Premium', status: 'Active', nextPayment: 'Feb 18, 2024', amount: '$24.99' },
-                { name: 'Emma Johnson', email: 'emma@example.com', plan: 'Professional', status: 'Cancelled', nextPayment: 'Expired', amount: '$9.99' },
-              ].map((user, index) => (
+              {filteredSubscribers.map((user, index) => (
                 <tr key={index} className="border-b hover:bg-gray-50">
                   <td className="p-4">
                     <div className="flex items-center space-x-3">
@@ -92,7 +305,9 @@ const AdminSubscription = () => {
                   </td>
                   <td className="p-4">
                     <span className={`px-2 py-1 rounded text-sm ${
-                      user.plan === 'Premium' ? 'bg-purple-100 text-purple-800' : 'bg-blue-100 text-blue-800'
+                      user.plan === 'Premium' ? 'bg-purple-100 text-purple-800' : 
+                      user.plan === 'Professional' ? 'bg-blue-100 text-blue-800' : 
+                      'bg-gray-100 text-gray-800'
                     }`}>
                       {user.plan}
                     </span>
@@ -121,4 +336,4 @@ const AdminSubscription = () => {
   );
 };
 
-export default AdminSubscription
\ No newline at end of file
+export default AdminSubscription;
\ No newline at end of file
diff --git a/frontend/src/pages/admin/AdminuserManagement.jsx b/frontend/src/pages/admin/AdminuserManagement.jsx
index 8d7ab22..b2a3640 100644
--- a/frontend/src/pages/admin/AdminuserManagement.jsx
+++ b/frontend/src/pages/admin/AdminuserManagement.jsx
@@ -1,4 +1,4 @@
-import React from 'react';
+import React, { useState } from 'react';
 import { 
   BarChart3, 
   Users, 
@@ -16,14 +16,81 @@ import {
 
 // User Management Component
 const AdminUserManagement = () => {
+  const [showRoleDropdown, setShowRoleDropdown] = useState(false);
+  const [selectedRole, setSelectedRole] = useState('All Roles');
+  const [searchQuery, setSearchQuery] = useState('');
+
+  const users = [
+    { name: 'John Doe', email: 'john@example.com', role: 'Agent', status: 'Active', date: 'Jan 15, 2024', properties: 5 },
+    { name: 'Sarah Williams', email: 'sarah@example.com', role: 'Agent', status: 'Active', date: 'Dec 3, 2023', properties: 12 },
+    { name: 'Michael Brown', email: 'michael@example.com', role: 'Agent', status: 'Inactive', date: 'Feb 18, 2024', properties: 3 },
+    { name: 'Emma Johnson', email: 'emma@example.com', role: 'User', status: 'Active', date: 'Apr 8, 2024', properties: 8 },
+    { name: 'David Wilson', email: 'david@example.com', role: 'User', status: 'Active', date: 'May 12, 2024', properties: 6 },
+  ];
+
+  const filteredUsers = users
+    .filter(user => selectedRole === 'All Roles' || user.role === selectedRole)
+    .filter(user => 
+      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
+      user.email.toLowerCase().includes(searchQuery.toLowerCase())
+    );
+
+  const handleRoleSelect = (role) => {
+    setSelectedRole(role);
+    setShowRoleDropdown(false);
+  };
+
+  const handleSearchChange = (e) => {
+    setSearchQuery(e.target.value);
+  };
+
   return (
     <div className="p-6">
       <div className="flex justify-between items-center mb-6">
         <h1 className="text-2xl font-semibold">User Management</h1>
-        <button className="flex items-center space-x-2 px-4 py-2 border rounded-lg">
-          <Filter size={16} />
-          <span>All Roles</span>
-        </button>
+        <div className="flex items-center space-x-4">
+          <div className="relative">
+            <input
+              type="text"
+              placeholder="Search by name or email..."
+              value={searchQuery}
+              onChange={handleSearchChange}
+              className="pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
+            />
+            <Search size={16} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
+          </div>
+          <div className="relative">
+            <button 
+              className="flex items-center space-x-2 px-4 py-2 border rounded-lg"
+              onClick={() => setShowRoleDropdown(!showRoleDropdown)}
+            >
+              <Filter size={16} />
+              <span>{selectedRole}</span>
+            </button>
+            {showRoleDropdown && (
+              <div className="absolute right-0 mt-2 w-48 bg-white border rounded-lg shadow-lg z-10">
+                <button 
+                  className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                  onClick={() => handleRoleSelect('All Roles')}
+                >
+                  All Roles
+                </button>
+                <button 
+                  className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                  onClick={() => handleRoleSelect('Agent')}
+                >
+                  Agent
+                </button>
+                <button 
+                  className="w-full text-left px-4 py-2 hover:bg-gray-100"
+                  onClick={() => handleRoleSelect('User')}
+                >
+                  User
+                </button>
+              </div>
+            )}
+          </div>
+        </div>
       </div>
       
       <div className="bg-white rounded-lg shadow-sm border">
@@ -40,13 +107,7 @@ const AdminUserManagement = () => {
               </tr>
             </thead>
             <tbody>
-              {[
-                { name: 'John Doe', email: 'john@example.com', role: 'Agent', status: 'Active', date: 'Jan 15, 2024', properties: 5 },
-                { name: 'Sarah Williams', email: 'sarah@example.com', role: 'Agent', status: 'Active', date: 'Dec 3, 2023', properties: 12 },
-                { name: 'Michael Brown', email: 'michael@example.com', role: 'Agent', status: 'Inactive', date: 'Feb 18, 2024', properties: 3 },
-                { name: 'Emma Johnson', email: 'emma@example.com', role: 'Agent', status: 'Active', date: 'Apr 8, 2024', properties: 8 },
-                { name: 'David Wilson', email: 'david@example.com', role: 'Agent', status: 'Active', date: 'May 12, 2024', properties: 6 },
-              ].map((user, index) => (
+              {filteredUsers.map((user, index) => (
                 <tr key={index} className="border-b hover:bg-gray-50">
                   <td className="p-4">
                     <div className="flex items-center space-x-3">
@@ -84,4 +145,4 @@ const AdminUserManagement = () => {
   );
 };
 
-export default AdminUserManagement
+export default AdminUserManagement;
\ No newline at end of file
